[build-system]
requires = [
    "setuptools>=42",
    "wheel",
    "setuptools_scm[toml]>=3.4"
    ]
build-backend = "setuptools.build_meta"

[tool.setuptools]
packages = ["src"]

[tool.setuptools_scm]
write_to = "src/napari_locan/_version.py"

[project]
name = "napari_locan"
description = "Use locan methods in napari"
readme = "README.md"
requires-python = ">=3.8"
license = {file = "LICENSE.md"}
authors = [
  {name = "napari-locan Developers"},
]
maintainers = [
  {name = "SÃ¶ren Doose"}
]
keywords = ["napari plugin", "locan"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Framework :: napari",
    "Intended Audience :: Education",
    "Intended Audience :: Science/Research",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: BSD License",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering",
    "Topic :: Scientific/Engineering :: Bio-Informatics",
]
dynamic = ["version"]
dependencies = [
    "locan",
    "magicgui",
    "numpy",
    "qtpy",
    "tomli>=1.1.0; python_version<'3.11'",
]

[project.optional-dependencies]
testing =[
    "napari",
    "pyqt5",
    "pytest",
    "pytest-cov",
    "pytest-qt",
    "tox",
]
dev = [
    "coverage",
    "build",
    "twine",
    "black",
    "pre-commit",
    "ruff",
    "mypy",
]

[project.urls]
homepage = "https://github.com/super-resolution/napari-locan"
documentation = "https://locan.readthedocs.io/"
repository = "https://github.com/super-resolution/napari-locan"
issues = "https://github.com/super-resolution/napari-locan/issues"
changelog = "https://github.com/super-resolution/napari-locan"

[project.entry-points."napari.manifest"]
napari-locan = "napari_locan:napari.yaml"

[tool.black]
line-length = 88

[tool.coverage.run]
source = ["src"]
omit = [
    "src/napari_locan/_tests/*",
    "src/napari_locan/scripts/*",
    "src/napari_locan/napari.yaml",
]

[tool.ruff]
line-length = 88
show-source = false
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "Q",  # flake8-quotes
    "YTT",  # flake8-2020
    "S",  # flake8-bandit
    "UP", # pyupgrade
    "BLE", # flake8-blind-exception
    "A", # flake8-builtins
    "C4", # flake8-comprehensions
    "ISC", # flake8-implicit-str-concat
    "G", # flake8-logging-format
    "PIE", # flake8-pie
    "SIM", # flake8-simplify
]
fixable = ["I"]
# Rules - https://github.com/charliermarsh/ruff#reference:
# E402 module-import-not-at-top-of-file
# E501 line-too-long
# F403 import-star-used
# F405 undefined-local-with-import-star-usage
# I001 unsorted-imports
# Q000 bad-quotes-inline-string
# S101 assert
# S307 suspicious-eval-usage
# S605 start-process-with-a-shell
# S607 start-process-with-partial-path
ignore = []
# automatically exclude files that are ignored by .gitignore
exclude = [
    ".*",
    "dist",
    "docs",
    "docker",
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["E402", "F401", "F403", "F405"]
"_version.py" = ["Q000"]
"test_*.py" = ["S101", "S605", "S607"]

[tool.ruff.pydocstyle]
convention = "numpy"

[tool.napari.manifest]
display_name = "napari-locan"

[tool.mypy]
files = ["src"]
strict = true
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = [
    'napari_locan.scripts.*',
]
ignore_errors = true

[[tool.mypy.overrides]]
module = [
    'napari_locan._tests.*',
]
disallow_untyped_defs = false
